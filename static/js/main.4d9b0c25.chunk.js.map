{"version":3,"sources":["components/Exercises/Dialogs/Create.js","components/Layouts/Header.js","components/Layouts/Footer.js","components/Exercises/index.js","store.js","components/App.js","index.js"],"names":["CreateExercise","state","open","exercise","title","muscles","description","id","handleToggle","_this","setState","handleChange","name","_ref","value","target","Object","objectSpread2","defineProperty","handleSubmit","console","log","props","onCreate","_this$props","this","categories","classes","_this$state$exercise","muscle","react_default","a","createElement","react","Fab","aria-label","size","onClick","style","position","right","Add_default","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","onChange","className","formControl","FormControl","InputLabel","Select","labelId","map","i","MenuItem","key","multiline","rows","DialogActions","Button","color","variant","Component","withStyles","theme","width","Header","onExerciseCreate","AppBar","Toolbar","Typography","Create","Footer","category","onSelect","index","findIndex","group","Paper","Tabs","e","indicatorColor","textColor","scrollButtons","Tab","styles","padding","marginTop","marginBottom","height","overflowY","StyledListItemIcon","styled","ListItemIcon","minWidth","StyledListItem","ListItem","paddingLeft","paddingBottom","paddingTop","Exercise","arms","back","chest","legs","shoulders","handleClick","prevState","_this2","exercises","_this$props$exercise","_this$props$exercise$","_this$props$exercise$2","Grid","container","item","xs","List","component","_ref2","slicedToArray","button","dense","disableGutters","ViewList_default","fontSize","ListItemText","primary","textTransform","ExpandLess_default","ExpandMore_default","borderBottom","Collapse","in","timeout","unmountOnExit","disablePadding","_ref3","App","fetchExercisesByMuscles","entries","reduce","concat","toConsumableArray","handleCategorySelect","handleExcerciseSelect","find","ex","handleExerciseCreate","excercises","Layouts_Header","Exercises","Layouts_Footer","rootElement","document","getElementById","ReactDOM","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.4d9b0c25.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Fab\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  formControl: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nclass CreateExercise extends Component {\r\n  state = {\r\n    open: false,\r\n    exercise: {\r\n      title: \"\",\r\n      muscles: \"\",\r\n      description: \"\",\r\n      id:\"123\"\r\n    }\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  };\r\n\r\n  handleChange = name => ({target:{value}}) => {\r\n    this.setState({\r\n        exercise:{\r\n            ...this.state.exercise,[name]: value\r\n        }\r\n    })\r\n  };\r\n\r\n  handleSubmit = () => {\r\n      const {exercise} = this.state;\r\n      console.log('aa');console.log(exercise);\r\n    this.props.onCreate(exercise);\r\n\r\n    this.setState({\r\n        open:false,\r\n        exercise:{\r\n            title:\"\",\r\n            description:\"\",\r\n            muscles:\"\"\r\n        }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { muscles: categories, classes } = this.props,\r\n      {\r\n        exercise: { title, muscle, description }\r\n      } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Fab\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={this.handleToggle}\r\n          style={{ position: \"absolute\", right: 5 }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n\r\n        <Dialog open={this.state.open} onClose={this.handleToggle}>\r\n          <DialogTitle id=\"form-dialog-title\">Create Exercise</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Fill these details to create an exercise\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Exercise\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={this.handleChange('title')}\r\n              className={classes.formControl}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Muscles</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                value={muscle}\r\n                onChange={this.handleChange('muscles')}\r\n              >\r\n                {categories.map((muscle, i) => (\r\n                  <MenuItem key={i} value={muscle}>\r\n                    {muscle}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              value={description}\r\n              onChange={this.handleChange('description')}\r\n              className={classes.formControl}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Create\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateExercise);\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport CreateExercise from \"../Exercises/Dialogs/Create\";\r\n\r\nconst Header = ({ muscles, onExerciseCreate }) => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar variant=\"dense\">\r\n        <Typography variant=\"h5\">Exercises</Typography>\r\n        <CreateExercise\r\n          muscles={muscles}\r\n          onCreate={onExerciseCreate}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\n\r\nconst Footer = ({ muscles, category, onSelect }) => {\r\n  const index = category\r\n    ? muscles.findIndex(group => group === category) + 1\r\n    : 0;\r\n\r\n  return (\r\n    <Paper>\r\n      <Tabs\r\n        value={index}\r\n        onChange={(e, index) =>\r\n          index !== 0 ? onSelect(muscles[index - 1]) : onSelect(\"\")\r\n        }\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n      >\r\n        <Tab label=\"All\" />\r\n        {muscles.map((muscle, i) => (\r\n          <Tab key={i} label={muscle} />\r\n        ))}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React, { Fragment, Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  styled\r\n} from \"@material-ui/core\";\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\n\r\nconst styles = {\r\n  Paper: {\r\n    padding: 15,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    height: 450,\r\n    overflowY: \"auto\"\r\n  }\r\n};\r\n\r\nconst StyledListItemIcon = styled(ListItemIcon)({\r\n  minWidth: 0,\r\n  padding:2\r\n})\r\n\r\nconst StyledListItem = styled(ListItem)({\r\n  paddingLeft: 32,\r\n  paddingBottom: 0,\r\n  paddingTop: 0\r\n});\r\n\r\nclass Exercise extends Component{\r\n\r\n  state = {\r\n    open: {arms: true, back: true, chest: true, legs: true, shoulders: true}\r\n  }\r\n\r\n  handleClick = name => {\r\n    console.log(name);\r\n    this.setState((prevState)=>({\r\n      open: {\r\n        ...prevState.open, [name]: !prevState.open[name] \r\n      }\r\n    }));\r\n  }\r\n  \r\nrender(){\r\n\r\n  const {\r\n    exercises,\r\n    category,\r\n    onSelect,\r\n    exercise: {\r\n      id,\r\n      title= \"Welcome!\",\r\n      description= \"Please select an exercise from left\"\r\n    }\r\n  } = this.props;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs>\r\n        <Paper style={styles.Paper}>\r\n          {/* {exercises.map(([group, exercises], i) =>\r\n            !category || category === group ? (\r\n              <Fragment key={i}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {group}\r\n                </Typography>\r\n                <List component=\"ul\">\r\n                  {exercises.map(({ id, title }, i) => (\r\n                    <StyledListItem button key={i} onClick={() => onSelect(id)}>\r\n                      <ListItemText primary={title} />\r\n                    </StyledListItem>\r\n                  ))}\r\n                </List>\r\n              </Fragment>\r\n            ) : null\r\n          )} */}\r\n      <List component=\"nav\" \r\n      >\r\n        {exercises.map(([group, exercises], i) =>\r\n            !category || category === group ? (\r\n              <Fragment key={i}>\r\n                <ListItem button dense disableGutters onClick={()=> this.handleClick(group)}>\r\n                <StyledListItemIcon>\r\n                  <ViewListIcon fontSize=\"small\" />\r\n                </StyledListItemIcon>\r\n                  <ListItemText primary={group} style={{ textTransform: \"capitalize\" }}/>\r\n                  {this.state.open[group] ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <div style={{borderBottom: '1px solid #eee'}}></div>\r\n                <Collapse in={this.state.open[group]} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                  {exercises.map(({ id, title }, i) => (\r\n                    <Fragment key={i}>\r\n                      <StyledListItem button>\r\n                        <ListItemText primary={title} />\r\n                      </StyledListItem>\r\n                    </Fragment>\r\n                  ))}\r\n                  </List>\r\n                </Collapse>\r\n              </Fragment>\r\n            ) : null\r\n          )}\r\n    </List>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Paper style={styles.Paper}>\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n          <Typography variant=\"body2\">{description}</Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )}\r\n};\r\nexport default Exercise;\r\n","export const muscles = [\"shoulders\", \"chest\", \"arms\", \"back\", \"legs\"];\r\n\r\nexport const exercises = [\r\n  {\r\n    id: \"overhead-press\",\r\n    title: \"Overhead Press\",\r\n    description: \"Delts exercise...\",\r\n    muscles: \"shoulders\"\r\n  },\r\n  {\r\n    id: \"dips\",\r\n    title: \"Dips\",\r\n    description: \"Triceps exercise...\",\r\n    muscles: \"arms\"\r\n  },\r\n  {\r\n    id: \"barbell-curls\",\r\n    title: \"Barbell Curls\",\r\n    description: \"Biceps exercise...\",\r\n    muscles: \"arms\"\r\n  },\r\n  {\r\n    id: \"bench-press\",\r\n    title: \"Bench Press\",\r\n    description: \"Chest exercise...\",\r\n    muscles: \"chest\"\r\n  },\r\n  {\r\n    id: \"pull-ups\",\r\n    title: \"Pull Ups\",\r\n    description: \"Back and biceps exercise...\",\r\n    muscles: \"back\"\r\n  },\r\n  {\r\n    id: \"deadlifts\",\r\n    title: \"Deadlifts\",\r\n    description: \"Back and leg exercise...\",\r\n    muscles: \"back\"\r\n  },\r\n  {\r\n    id: \"squats\",\r\n    title: \"Squats\",\r\n    description: \"Legs exercise...\",\r\n    muscles: \"legs\"\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Header, Footer } from \"./Layouts\";\r\nimport Exercise from \"./Exercises/\";\r\nimport { muscles, exercises } from \"../store\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    exercises: exercises,\r\n    category: \"\",\r\n    exercise: {}\r\n  };\r\n\r\n  fetchExercisesByMuscles = () => {\r\n    return Object.entries(\r\n      this.state.exercises.reduce((exercises, exercise) => {\r\n        const { muscles } = exercise;\r\n\r\n        exercises[muscles] = exercises[muscles]\r\n          ? [...exercises[muscles], exercise]\r\n          : [exercise];\r\n        return exercises;\r\n      }, {})\r\n    );\r\n  };\r\n\r\n  handleCategorySelect = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      category: value\r\n    });\r\n  };\r\n\r\n  handleExcerciseSelect = id => {\r\n    console.log(id);\r\n    this.setState(prevState => ({\r\n      exercise: prevState.exercises.find(ex => ex.id === id)\r\n    }));\r\n  };\r\n\r\n  handleExerciseCreate = (exercise) => {\r\n    console.log('bb');console.log(exercise);console.log(this.state.exercises);\r\n    this.setState(({excercises})=>({\r\n      exercises: [...exercises, exercise]\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const exercises = this.fetchExercisesByMuscles();\r\n\r\n    return (\r\n      <div>\r\n        <Header\r\n          muscles={muscles}\r\n          onExerciseCreate={this.handleExerciseCreate}\r\n        />\r\n        <Exercise\r\n          exercises={exercises}\r\n          category={this.state.category}\r\n          exercise={this.state.exercise}\r\n          onSelect={this.handleExcerciseSelect}\r\n        />\r\n        <Footer\r\n          muscles={muscles}\r\n          category={this.state.category}\r\n          onSelect={this.handleCategorySelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}